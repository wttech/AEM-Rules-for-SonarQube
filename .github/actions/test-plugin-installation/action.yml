#
# #%L
# AEM Rules for SonarQube
# %%
# Copyright (C) 2015-2019 Wunderman Thompson Technology
# %%
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# #L%
#

name: 'Test plugin installation'
description: 'Installs AEM Rules on a SonarQube server to check if there are any runtime issues caused by dependencies'
inputs:
  sonarqube-base-image:
    description: 'Which base Docker image to use to set up SonarQube'
    required: true
    default: sonarqube-8.9-community
  aem-rules-binary:
    description: "Name of the JAR file to copy from Maven's 'target' directory into the plugins directory"
    required: true
    default: 'sonar-aemrules-plugin-1.4-SNAPSHOT.jar'
  docker-hub-login:
    description: 'Docker Hub username for which an access token has been generated'
    required: true
  docker-hub-token:
    description: 'Read-only Docker Hub access Token with which to download the public SonarQube image'
    required: true
runs:
  using: "composite"
  steps:
    # - uses: actions/checkout@v2
    - name: Copy AEM Rules JAR
      shell: bash
      run: |
        cp target/${{ inputs.aem-rules-binary }} .github/actions/test-plugin-installation/${{ inputs.aem-rules-binary }}
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
          username: ${{ inputs.docker-hub-login }}
          password: ${{ inputs.docker-hub-token }}
      # Normally, this would use implicit env variables created for inputs
      # see https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#example-specifying-inputs
      # these don't, however, appear to work in composite actions https://github.com/actions/runner/issues/665
    - name: Build image
      shell: bash
      working-directory: .github/actions/test-plugin-installation
      env:
        INPUTS_SONARQUBE_BASE_IMAGE: ${{ inputs.sonarqube-base-image }}
        INPUTS_AEM_RULES_BINARY: ${{ inputs.aem-rules-binary }}
      # Use https://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html to lowercase the file name
      # so that it's valid to use in a Docker container name
      run: |
        docker build . -t ${INPUTS_SONARQUBE_BASE_IMAGE,,}-${INPUTS_AEM_RULES_BINARY,,} \
          --build-arg inputs_sonarqube_base_image=${INPUTS_SONARQUBE_BASE_IMAGE,,} \
          --build-arg inputs_aem_rules_binary=${INPUTS_AEM_RULES_BINARY,,}
    - name: Test image
      shell: bash
      working-directory: .github/actions/test-plugin-installation
      env:
        INPUTS_SONARQUBE_BASE_IMAGE: ${{ inputs.sonarqube-base-image }}
        INPUTS_AEM_RULES_BINARY: ${{ inputs.aem-rules-binary }}
      run: ./run-tests.sh ${INPUTS_SONARQUBE_BASE_IMAGE,,}-${INPUTS_AEM_RULES_BINARY,,}