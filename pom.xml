<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.cognifide.aemrules</groupId>
  <artifactId>sonar-aemrules-plugin</artifactId>
  <version>1.3-SNAPSHOT</version>

  <name>AEM Rules for SonarQube</name>
  <description>SonarQube plugin with set of rules detecting possible bugs and bad smells specific
    for AEM
    development.
  </description>

  <packaging>sonar-plugin</packaging>

  <inceptionYear>2015</inceptionYear>
  <organization>
    <name>Cognifide Limited</name>
    <url>http://www.cognifide.com</url>
  </organization>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>michal.chudy</id>
      <name>Michal Chudy</name>
      <email>michal.chudy@cognifide.com</email>
    </developer>
    <developer>
      <id>szymon.owczarzak</id>
      <name>Szymon Owczarzak</name>
      <email>szymon.owczarzak@cognifide.com</email>
    </developer>
    <developer>
      <id>piotr.wilczynski</id>
      <name>Piotr Wilczyński</name>
      <email>piotr.wilczynski@cognifide.com</email>
    </developer>
    <developer>
      <id>michal.tobiasz</id>
      <name>Michał Tobiasz</name>
      <email>michal.tobiasz@cognifide.com</email>
    </developer>
    <developer>
      <id>mateusz.bartkowiak</id>
      <name>Mateusz Bartkowiak</name>
      <email>mateusz.bartkowiak@cognifide.com</email>
    </developer>
    <developer>
      <id>jedrzej.plucinski</id>
      <name>Jędrzej Pluciński</name>
      <email>jedrzej.plucinski@cognifide.com</email>
    </developer>
    <developer>
      <id>krystian.panek</id>
      <name>Krystian Panek</name>
      <email>krystian.panek@cognifide.com</email>
    </developer>
  </developers>

  <contributors>
    <contributor>
      <name>Krzysztof Malinowski</name>
      <email>krzysztof.malinowski@motorolasolutions.com</email>
      <organization>Motorola Solutions, Inc.</organization>
      <organizationUrl>https://www.motorolasolutions.com</organizationUrl>
    </contributor>
  </contributors>

  <scm>
    <connection>scm:git:git@github.com:Cognifide/AEM-Rules-for-SonarQube.git</connection>
    <url>scm:git:git@github.com:Cognifide/AEM-Rules-for-SonarQube.git</url>
    <developerConnection>scm:git:git@github.com:Cognifide/AEM-Rules-for-SonarQube.git
    </developerConnection>
    <tag>HEAD</tag>
  </scm>

  <issueManagement>
    <system>jira</system>
    <url>https://github.com/Cognifide/AEM-Rules-for-SonarQube/issues</url>
  </issueManagement>

  <distributionManagement>
    <repository>
      <id>cognifide-internal-repository</id>
      <name>Cognifide Internal Repository</name>
      <url>https://nexus.cognifide.com/content/repositories/cognifide-internal</url>
    </repository>
    <snapshotRepository>
      <id>cognifide-internal-snapshots-repository</id>
      <name>Cognifide Internal Repository</name>
      <url>https://nexus.cognifide.com/content/repositories/cognifide-internal-snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <htl.version>1.1.2-1.4.0</htl.version>
    <sonar.version>7.9.2</sonar.version>
    <sonar.html.version>3.0.1.1444</sonar.html.version>
    <sonar.java.plugin>6.2.0.21135</sonar.java.plugin>
    <coveralls.repo.token>4rVf3NGV0jyQ3EGrc8L86oEDoHWm6MgDD</coveralls.repo.token>
    <tagName>v${project.version}</tagName>
  </properties>

  <repositories>
    <repository>
      <id>central</id>
      <url>https://repo.maven.apache.org/maven2/</url>
    </repository>
    <repository>
      <id>adobe-releases</id>
      <url>https://repo.adobe.com/nexus/content/groups/public/</url>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.scripting.sightly.compiler</artifactId>
      <version>${htl.version}</version>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.sonarqube</groupId>
      <artifactId>sonar-plugin-api</artifactId>
      <version>${sonar.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.java</groupId>
      <artifactId>sonar-java-plugin</artifactId>
      <type>sonar-plugin</type>
      <version>${sonar.java.plugin}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.sslr-squid-bridge</groupId>
      <artifactId>sslr-squid-bridge</artifactId>
      <version>2.6.1</version>
      <exclusions>
        <exclusion>
          <groupId>org.codehaus.sonar.sslr</groupId>
          <artifactId>sslr-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.codehaus.sonar</groupId>
          <artifactId>sonar-plugin-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.codehaus.sonar.sslr</groupId>
          <artifactId>sslr-xpath</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.8.1</version>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.html</groupId>
      <artifactId>sonar-html-plugin</artifactId>
      <version>${sonar.html.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Unit Test dependencies -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.6.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.java</groupId>
      <artifactId>java-checks-testkit</artifactId>
      <version>${sonar.java.plugin}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easytesting</groupId>
      <artifactId>fest-assert</artifactId>
      <version>1.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>0.9.30</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.adobe.aem</groupId>
      <artifactId>aem-api</artifactId>
      <version>6.0.0.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>javax.jcr</groupId>
      <artifactId>jcr</artifactId>
      <version>2.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.scr.annotations</artifactId>
      <version>1.9.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.servlets.resolver</artifactId>
      <version>2.3.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.api</artifactId>
      <version>2.4.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.models.api</artifactId>
      <version>1.1.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.query</artifactId>
      <version>4.0.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>2.21.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.core</artifactId>
      <version>4.2.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.compendium</artifactId>
      <version>4.2.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.service.component.annotations</artifactId>
      <version>1.3.0</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.5.1</version>
        <configuration>
          <source>8</source>
          <target>8</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.0</version>
        <configuration>
          <forkCount>3</forkCount>
          <reuseForks>true</reuseForks>
          <!--
            The dynamically evaluated @{argLine} variable is required to persist command line parameters
            appended by the jacoco maven plugin (jacoco:prepare-agent)
            The memory related ones specified inline are a workaround for Windows builds.
            See https://stackoverflow.com/questions/23260057/the-forked-vm-terminated-without-saying-properly-goodbye-vm-crash-or-system-exi/33757854#33757854
          -->
          <argLine>
            @{argLine} -Xmx1024m -XX:MaxPermSize=256m
          </argLine>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.sonarsource.sonar-packaging-maven-plugin</groupId>
        <artifactId>sonar-packaging-maven-plugin</artifactId>
        <version>1.18.0.372</version>
        <extensions>true</extensions>
        <configuration>
          <pluginKey>aemrules</pluginKey>
          <pluginClass>com.cognifide.aemrules.AemRulesSonarPlugin</pluginClass>
          <pluginName>${project.name}</pluginName>
          <pluginDescription>${project.description}</pluginDescription>
          <pluginIssueTrackerUrl>https://github.com/Cognifide/AEM-Rules-for-SonarQube/issues
          </pluginIssueTrackerUrl>
          <pluginSourcesUrl>https://github.com/Cognifide/AEM-Rules-for-SonarQube/tree/${tagName}
          </pluginSourcesUrl>
          <pluginUrl>https://github.com/Cognifide/AEM-Rules-for-SonarQube</pluginUrl>
          <skipDependenciesPackaging>false</skipDependenciesPackaging>
          <requirePlugins>java:4.10</requirePlugins>
          <sonarQubeMinVersion>6.7</sonarQubeMinVersion>
          <sonarLintSupported>true</sonarLintSupported>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.eluder.coveralls</groupId>
        <artifactId>coveralls-maven-plugin</artifactId>
        <version>4.3.0</version>
        <dependencies>
          <!-- Explicit dep on jaxb-api to avoid problems with
            JDK9 and later, until a new version of
            coveralls-maven-plugin is released.
            See also https://github.com/trautonen/coveralls-maven-plugin/issues/112-->
          <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.1</version>
          </dependency>
        </dependencies>
        <configuration>
          <repoToken>${coveralls.repo.token}</repoToken>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.5</version>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.5.3</version>
        <configuration>
          <tagNameFormat>v@{project.version}</tagNameFormat>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>3.0</version>
        <configuration>
          <skipExistingHeaders>false</skipExistingHeaders>
          <header>${basedir}/assets/license-template.txt</header>
          <headerDefinitions>
            <header>${basedir}/assets/license-header-definition.xml</header>
          </headerDefinitions>
          <excludes>
            <exclude>**/README</exclude>
            <exclude>src/main/resources/**</exclude>
            <exclude>**/LICENSE.txt</exclude>
            <exclude>**.xml</exclude>
            <exclude>assets/**</exclude>
            <exclude>src/test/files/checks/htl/HtlCommentsCheck.html</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!--
          Maven dependency plugin is necessary for JavaCheckVerifier.verifyNoIssue to work properly. It copies
          dependencies other than "provided" to test-jars folder.
          Warning! If you remove it, tests which call JavaCheckVerifier.verifyNoIssue will
          always pass, even if they are incorrect.
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>test-compile</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <excludeScope>provided</excludeScope>
              <outputDirectory>${project.build.directory}/test-jars</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
